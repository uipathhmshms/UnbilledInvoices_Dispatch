<Activity mc:Ignorable="sap sap2010" x:Class="DataExtraction" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:ss="clr-namespace:System.Security;assembly=System.Private.CoreLib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="io_dt_data" Type="InOutArgument(sd:DataTable)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1439.0000000000002,762</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>DataExtraction_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>UiPath.Database</x:String>
      <x:String>UiPath.Database.Activities</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.Database</AssemblyReference>
      <AssemblyReference>UiPath.Database.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>System.Windows.Forms.Design</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices.RuntimeInformation</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.Watcher</AssemblyReference>
      <AssemblyReference>System.IO.Packaging</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.AccessControl</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.DriveInfo</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>System.CodeDom</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Forms</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Core</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Flowchart sap2010:Annotation.AnnotationText="Connects to DB and retrieves the data,&#xA;Merge Invoices and Budget  data,&#xA;Filters and sorts the merges data" DisplayName="DataExtraction" sap:VirtualizedContainerService.HintSize="1024,863" sap2010:WorkflowViewState.IdRef="Flowchart_4">
    <Flowchart.Variables>
      <Variable x:TypeArguments="ui:DatabaseConnection" Name="dbConn_connection" />
      <Variable x:TypeArguments="x:String" Name="str_connectionString" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_InvoicesData" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_budgetData" />
      <Variable x:TypeArguments="sd:DataTable" Name="dt_employeeData" />
      <Variable x:TypeArguments="scg:IEnumerable(sd:DataRow)" Name="test" />
    </Flowchart.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <av:Point x:Key="ShapeLocation">80,2.5</av:Point>
        <av:Size x:Key="ShapeSize">60,75</av:Size>
        <av:PointCollection x:Key="ConnectorLocation">140,40 170,40 170,40.5 190,40.5</av:PointCollection>
        <x:Double x:Key="Height">766</x:Double>
        <x:Boolean x:Key="IsPinned">False</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        <x:Double x:Key="Width">990</x:Double>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Flowchart.StartNode>
      <x:Reference>__ReferenceID10</x:Reference>
    </Flowchart.StartNode>
    <FlowStep x:Name="__ReferenceID0" sap2010:WorkflowViewState.IdRef="FlowStep_5">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">190,538</av:Point>
          <av:Size x:Key="ShapeSize">200,25</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">390,550.5 420,550.5 420,68.5 610,68.5</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:DatabaseDisconnect DatabaseConnection="[dbConn_connection]" DisplayName="Disconnect from Database" sap:VirtualizedContainerService.HintSize="200,25" sap2010:WorkflowViewState.IdRef="DatabaseDisconnect_4" />
      <FlowStep.Next>
        <FlowStep x:Name="__ReferenceID4" sap2010:WorkflowViewState.IdRef="FlowStep_7">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:Point x:Key="ShapeLocation">610,20</av:Point>
              <av:Size x:Key="ShapeSize">200,97</av:Size>
              <av:PointCollection x:Key="ConnectorLocation">710,117 710,141</av:PointCollection>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:JoinDataTables sap2010:Annotation.AnnotationText="Joins invoices and Budget tables" DataTable1="[dt_budgetData]" DataTable2="[dt_InvoicesData]" DisplayName="Join Data Tables" sap:VirtualizedContainerService.HintSize="200,97" sap2010:WorkflowViewState.IdRef="JoinDataTables_5" JoinType="Inner" OutputDataTable="[io_dt_data]">
            <ui:JoinDataTables.Arguments>
              <scg:List x:TypeArguments="ui:JoinOperationArgument" Capacity="4">
                <ui:JoinOperationArgument Operand="{x:Null}" BooleanOperator="And" Operator="EQ">
                  <ui:JoinOperationArgument.Column1>
                    <InArgument x:TypeArguments="x:String">["קוד סעיף תקציבי"]</InArgument>
                  </ui:JoinOperationArgument.Column1>
                  <ui:JoinOperationArgument.Column2>
                    <InArgument x:TypeArguments="x:String">["קוד סעיף תקציבי"]</InArgument>
                  </ui:JoinOperationArgument.Column2>
                </ui:JoinOperationArgument>
              </scg:List>
            </ui:JoinDataTables.Arguments>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:JoinDataTables>
          <FlowStep.Next>
            <FlowStep x:Name="__ReferenceID5">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">493,141</av:Point>
                  <av:Size x:Key="ShapeSize">434,113</av:Size>
                  <av:PointCollection x:Key="ConnectorLocation">710,254 710,284</av:PointCollection>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:MultipleAssign sap2010:Annotation.AnnotationText="Changes &quot;billiingMethod&quot; to &quot;שיטת חיוב&quot;&#xA;Changes &quot;קוד חשבון מנהל פרויקט&quot; to &quot;קוד מנהל פרויקט&quot;&#xA;Keeps only relevant rows of the dt" DisplayName="Columns name adjusments" sap:VirtualizedContainerService.HintSize="434,113" sap2010:WorkflowViewState.IdRef="MultipleAssign_4">
                <ui:MultipleAssign.AssignOperations>
                  <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_7">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="x:String">[io_dt_data.Columns("billingMethod").ColumnName]</OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="x:String">שיטת חיוב</InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_9">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="x:String">[io_dt_data.Columns("קוד חשבון מנהל פרויקט").ColumnName]</OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="x:String">קוד מנהל פרויקט</InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_12">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="sd:DataTable">[io_dt_data]</OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="sd:DataTable" xml:space="preserve">[(From row In io_dt_data.AsEnumerable()
Let parsedDate = DateTime.ParseExact(row.Field(Of datetime)("תאריך פעילות").tostring, "MM/dd/yyyy hh:mm:ss", Nothing)
Let currentYear As Integer = DateTime.Now.Year
Let previousYear As Integer = currentYear - 1
Where parsedDate.Year = currentYear OrElse 
			parsedDate.Year = previousYear
Select row).CopyToDataTable]</InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                    <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_19">
                      <ui:AssignOperation.To>
                        <OutArgument x:TypeArguments="sd:DataTable">[io_dt_data]</OutArgument>
                      </ui:AssignOperation.To>
                      <ui:AssignOperation.Value>
                        <InArgument x:TypeArguments="sd:DataTable" xml:space="preserve">[(From row In io_dt_data.AsEnumerable()
Where row("סטטוס").ToString="נרשם"
Select row).CopyToDataTable]</InArgument>
                      </ui:AssignOperation.Value>
                    </ui:AssignOperation>
                  </scg:List>
                </ui:MultipleAssign.AssignOperations>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:MultipleAssign>
              <FlowStep.Next>
                <FlowStep x:Name="__ReferenceID9">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:Point x:Key="ShapeLocation">610,284</av:Point>
                      <av:Size x:Key="ShapeSize">200,272</av:Size>
                      <av:PointCollection x:Key="ConnectorLocation">710,556 710,587</av:PointCollection>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:InvokeCode ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Creates a HashSet(Of String) for fast lookup of existing &quot;קוד מנהל פרויקט&quot; values in io_dt_data.&#xA;Loops through dt_budgetData and checks if &quot;קוד חשבון מנהל פרויקט&quot; exists in io_dt_data.&#xA;If missing, adds a new row to io_dt_data.&#xA;Uses HashSet for efficient lookups, making it much faster than nested loops." Code="Try&#xD;&#xA;    ' Create a clone of io_dt_data to store the final updated rows&#xD;&#xA;    Dim updatedTable As DataTable = io_dt_data.Clone()&#xD;&#xA;&#xD;&#xA;    ' Copy existing rows to the new DataTable&#xD;&#xA;    For Each existingRow As DataRow In io_dt_data.Rows&#xD;&#xA;        updatedTable.ImportRow(existingRow)&#xD;&#xA;    Next&#xD;&#xA;&#xD;&#xA;    ' Create a list of existing manager codes in io_dt_data&#xD;&#xA;    Dim existingManagerCodes As HashSet(Of String) = New HashSet(Of String)(&#xD;&#xA;        io_dt_data.AsEnumerable().Select(Function(row) row.Field(Of String)(&quot;קוד מנהל פרויקט&quot;))&#xD;&#xA;    )&#xD;&#xA;&#xD;&#xA;    ' Iterate through dt_budgetData to find missing managers&#xD;&#xA;    Dim lineNumber As Integer = 1 ' Track row number for logging&#xD;&#xA;&#xD;&#xA;    For Each budgetRow As DataRow In dt_budgetData.Rows&#xD;&#xA;        Try&#xD;&#xA;            Dim managerCode As String = budgetRow.Field(Of String)(&quot;קוד חשבון מנהל פרויקט&quot;)&#xD;&#xA;&#xD;&#xA;            ' If the manager does not exist in io_dt_data, add a new row&#xD;&#xA;            If Not existingManagerCodes.Contains(managerCode) Then&#xD;&#xA;                Dim newRow As DataRow = updatedTable.NewRow()&#xD;&#xA;                newRow(&quot;קוד מנהל פרויקט&quot;) = managerCode&#xD;&#xA;                newRow(&quot;מנהל פרוייקט&quot;) = budgetRow.Field(Of String)(&quot;מנהל פרוייקט&quot;)&#xD;&#xA;                newRow(&quot;שיטת חיוב&quot;) = &quot;&quot;&#xD;&#xA;                newRow(&quot;שם לקוח&quot;) = &quot;&quot;&#xD;&#xA;                newRow(&quot;קוד סעיף תקציבי&quot;) = &quot;NONE&quot;&#xD;&#xA;                newRow(&quot;סעיף תקציבי&quot;) = &quot;&quot;&#xD;&#xA;                newRow(&quot;סכום חייב במע&quot;&quot;מ במטבע עסקה&quot;) =0&#xD;&#xA;                newRow(&quot;תאריך פעילות&quot;) = DBNull.Value&#xD;&#xA;                newRow(&quot;תאריך אסמכתא&quot;) = DBNull.Value&#xD;&#xA;                newRow(&quot;סטטוס&quot;) = &quot;&quot;&#xD;&#xA;&#xD;&#xA;                ' Add the new row to the cloned DataTable&#xD;&#xA;                updatedTable.Rows.Add(newRow)&#xD;&#xA;                Console.WriteLine($&quot;ROW ADDED: {managerCode}&quot;)&#xD;&#xA;&#xD;&#xA;                ' Add to HashSet to prevent duplicate checks&#xD;&#xA;                existingManagerCodes.Add(managerCode)&#xD;&#xA;            End If&#xD;&#xA;&#xD;&#xA;        Catch ex As Exception&#xD;&#xA;            ' Log error message with failing row number&#xD;&#xA;            Console.WriteLine($&quot;Error processing row {lineNumber}: {ex.Message}&quot;)&#xD;&#xA;&#xD;&#xA;            ' Throw an exception to stop execution if there's an error&#xD;&#xA;            Throw New System.Exception($&quot;Processing failed at row {lineNumber}: {ex.Message}&quot;)&#xD;&#xA;        End Try&#xD;&#xA;&#xD;&#xA;        lineNumber += 1 ' Increment line number tracker&#xD;&#xA;    Next&#xD;&#xA;&#xD;&#xA;    ' Assign the modified table back to io_dt_data&#xD;&#xA;    io_dt_data = updatedTable&#xD;&#xA;&#xD;&#xA;Catch ex As Exception&#xD;&#xA;    ' Log any critical failure in the entire process&#xD;&#xA;    Console.WriteLine($&quot;Critical error: {ex.Message}&quot;)&#xD;&#xA;    Throw New System.Exception($&quot;Critical failure: {ex.Message}&quot;)&#xD;&#xA;End Try&#xD;&#xA;" DisplayName="Invoke Code" sap:VirtualizedContainerService.HintSize="334,289" sap2010:WorkflowViewState.IdRef="InvokeCode_2">
                    <ui:InvokeCode.Arguments>
                      <InOutArgument x:TypeArguments="sd:DataTable" x:Key="io_dt_data">
                        <VisualBasicReference x:TypeArguments="sd:DataTable" ExpressionText="io_dt_data" />
                      </InOutArgument>
                      <InArgument x:TypeArguments="sd:DataTable" x:Key="dt_budgetData">
                        <VisualBasicValue x:TypeArguments="sd:DataTable" ExpressionText="dt_budgetData" />
                      </InArgument>
                    </ui:InvokeCode.Arguments>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                  </ui:InvokeCode>
                  <FlowStep.Next>
                    <FlowStep x:Name="__ReferenceID8">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <av:Point x:Key="ShapeLocation">610,587</av:Point>
                          <av:Size x:Key="ShapeSize">200,53</av:Size>
                          <av:PointCollection x:Key="ConnectorLocation">710,640 710,669</av:PointCollection>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:CommentOut sap:VirtualizedContainerService.HintSize="200,53" sap2010:WorkflowViewState.IdRef="CommentOut_5">
                        <ui:CommentOut.Body>
                          <Sequence DisplayName="Ignored Activities" sap2010:WorkflowViewState.IdRef="Sequence_12">
                            <Assign sap:VirtualizedContainerService.HintSize="200,53" sap2010:WorkflowViewState.IdRef="Assign_7">
                              <Assign.To>
                                <OutArgument x:TypeArguments="sd:DataTable">[io_dt_data]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="sd:DataTable" xml:space="preserve">[(From r In io_dt_data.AsEnumerable().Concat(
              From b In dt_budgetData.AsEnumerable()
              Where Not io_dt_data.AsEnumerable().
              Any(Function(d) d.Field(Of String)("קוד מנהל פרויקט") = b.Field(Of String)("קוד חשבון מנהל פרויקט"))
              Select io_dt_data.LoadDataRow(New Object() {
                  b.Field(Of String)("קוד חשבון מנהל פרויקט"),
                  b.Field(Of String)("מנהל פרוייקט"),
                  "", "", "", "", 0, DBNull.Value, DBNull.Value, "",""}, False)
            )).CopyToDataTable()]</InArgument>
                              </Assign.Value>
                            </Assign>
                          </Sequence>
                        </ui:CommentOut.Body>
                      </ui:CommentOut>
                      <FlowStep.Next>
                        <FlowStep x:Name="__ReferenceID7">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <av:Point x:Key="ShapeLocation">610,669</av:Point>
                              <av:Size x:Key="ShapeSize">200,97</av:Size>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:JoinDataTables sap2010:Annotation.AnnotationText="Joins invoices and Budget with employee" DataTable1="[io_dt_data]" DataTable2="[dt_employeeData]" DisplayName="Join Data Tables" sap:VirtualizedContainerService.HintSize="200,97" sap2010:WorkflowViewState.IdRef="JoinDataTables_6" JoinType="Inner" OutputDataTable="[io_dt_data]">
                            <ui:JoinDataTables.Arguments>
                              <scg:List x:TypeArguments="ui:JoinOperationArgument" Capacity="4">
                                <ui:JoinOperationArgument Operand="{x:Null}" BooleanOperator="And" Operator="EQ">
                                  <ui:JoinOperationArgument.Column1>
                                    <InArgument x:TypeArguments="x:String">["קוד מנהל פרויקט"]</InArgument>
                                  </ui:JoinOperationArgument.Column1>
                                  <ui:JoinOperationArgument.Column2>
                                    <InArgument x:TypeArguments="x:String">["קוד סוכן"]</InArgument>
                                  </ui:JoinOperationArgument.Column2>
                                </ui:JoinOperationArgument>
                              </scg:List>
                            </ui:JoinDataTables.Arguments>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:JoinDataTables>
                        </FlowStep>
                      </FlowStep.Next>
                    </FlowStep>
                  </FlowStep.Next>
                </FlowStep>
              </FlowStep.Next>
            </FlowStep>
          </FlowStep.Next>
        </FlowStep>
      </FlowStep.Next>
    </FlowStep>
    <FlowStep x:Name="__ReferenceID1" sap2010:WorkflowViewState.IdRef="FlowStep_4">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">190,290</av:Point>
          <av:Size x:Key="ShapeSize">200,97</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">290,387 290,404</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:ExecuteQuery ContinueOnError="{x:Null}" ExistingDbConnection="{x:Null}" TimeoutMS="{x:Null}" sap2010:Annotation.AnnotationText="Extract budget data from stored procedure" ConnectionString="[str_connectionString]" DataTable="[dt_budgetData]" DisplayName="Extract Budget Data" sap:VirtualizedContainerService.HintSize="200,97" sap2010:WorkflowViewState.IdRef="ExecuteQuery_8" ProviderName="Microsoft.Data.SqlClient" Sql="[&quot;USE [Halperin]; &quot; &amp; _&#xA;&quot;DECLARE @return_value int; &quot; &amp; _&#xA;&quot;EXEC @return_value = [dbo].[sp_ProjectBudgetTopic]; &quot; &amp; _&#xA;&quot;SELECT 'Return Value' = @return_value;&quot;]">
        <ui:ExecuteQuery.Parameters>
          <scg:Dictionary x:TypeArguments="x:String, Argument" />
        </ui:ExecuteQuery.Parameters>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ExecuteQuery>
      <FlowStep.Next>
        <FlowStep x:Name="__ReferenceID6">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:Point x:Key="ShapeLocation">190,404</av:Point>
              <av:Size x:Key="ShapeSize">200,113</av:Size>
              <av:PointCollection x:Key="ConnectorLocation">290,517 290,538</av:PointCollection>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:ExecuteQuery ContinueOnError="{x:Null}" ExistingDbConnection="{x:Null}" TimeoutMS="{x:Null}" sap2010:Annotation.AnnotationText="Extract employee data from stored procedure in order to get the manager emails" ConnectionString="[str_connectionString]" DataTable="[dt_employeeData]" DisplayName="Extract Employee Data" sap:VirtualizedContainerService.HintSize="200,113" sap2010:WorkflowViewState.IdRef="ExecuteQuery_9" ProviderName="Microsoft.Data.SqlClient" Sql="[&quot;USE [Halperin]; &quot; &amp; _&#xA;&quot;DECLARE @return_value int; &quot; &amp; _&#xA;&quot;EXEC @return_value = [dbo].[sp_Employees]; &quot; &amp; _&#xA;&quot;SELECT 'Return Value' = @return_value;&quot;]">
            <ui:ExecuteQuery.Parameters>
              <scg:Dictionary x:TypeArguments="x:String, Argument" />
            </ui:ExecuteQuery.Parameters>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ExecuteQuery>
          <FlowStep.Next>
            <x:Reference>__ReferenceID0</x:Reference>
          </FlowStep.Next>
        </FlowStep>
      </FlowStep.Next>
    </FlowStep>
    <FlowStep x:Name="__ReferenceID2" sap2010:WorkflowViewState.IdRef="FlowStep_3">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">190,176</av:Point>
          <av:Size x:Key="ShapeSize">200,97</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">290,273 290,290</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:ExecuteQuery ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" sap2010:Annotation.AnnotationText="Extract Invoices data from stored procedure" DataTable="[dt_InvoicesData]" DisplayName="Extract Invoices Data" ExistingDbConnection="[dbConn_connection]" sap:VirtualizedContainerService.HintSize="200,97" sap2010:WorkflowViewState.IdRef="ExecuteQuery_7" Sql="[&quot;USE [Halperin]; &quot; &amp; _&#xA;&quot;DECLARE @return_value int; &quot; &amp; _&#xA;&quot;EXEC @return_value = [dbo].[sp_Invoices_RPA]; &quot; &amp; _&#xA;&quot;SELECT 'Return Value' = @return_value;&quot;]">
        <ui:ExecuteQuery.Parameters>
          <scg:Dictionary x:TypeArguments="x:String, Argument" />
        </ui:ExecuteQuery.Parameters>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ExecuteQuery>
      <FlowStep.Next>
        <x:Reference>__ReferenceID1</x:Reference>
      </FlowStep.Next>
    </FlowStep>
    <FlowStep x:Name="__ReferenceID3" sap2010:WorkflowViewState.IdRef="FlowStep_2">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">190,101</av:Point>
          <av:Size x:Key="ShapeSize">200,53</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">290,153 290,176</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:DatabaseConnect DisplayName="Connect to Database" sap:VirtualizedContainerService.HintSize="200,53" sap2010:WorkflowViewState.IdRef="DatabaseConnect_4" ProviderName="Microsoft.Data.SqlClient" ConnectionString="[str_connectionString]" DatabaseConnection="[dbConn_connection]" />
      <FlowStep.Next>
        <x:Reference>__ReferenceID2</x:Reference>
      </FlowStep.Next>
    </FlowStep>
    <FlowStep x:Name="__ReferenceID10" sap2010:WorkflowViewState.IdRef="FlowStep_1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">190,0</av:Point>
          <av:Size x:Key="ShapeSize">200,83</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">290,83 290,101</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Sequence DisplayName="Generate Connection String" sap:VirtualizedContainerService.HintSize="200,83" sap2010:WorkflowViewState.IdRef="Sequence_7">
        <Sequence.Variables>
          <Variable x:TypeArguments="x:String" Name="str_dbName" />
          <Variable x:TypeArguments="x:String" Name="str_serverName" />
          <Variable x:TypeArguments="x:String" Name="str_dbUserName" />
          <Variable x:TypeArguments="ss:SecureString" Name="str_dbUserPass" />
        </Sequence.Variables>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:GetRobotAsset TimeoutMS="{x:Null}" sap2010:Annotation.AnnotationText="Get database name from cloud" AssetName="Accountant_DB_databaseName" CacheStrategy="None" DisplayName="Get Asset" FolderPath="Root/Finance/.General" sap:VirtualizedContainerService.HintSize="434,174" sap2010:WorkflowViewState.IdRef="GetRobotAsset_7">
          <ui:GetRobotAsset.Value>
            <OutArgument x:TypeArguments="x:String">[str_dbName]</OutArgument>
          </ui:GetRobotAsset.Value>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:GetRobotAsset>
        <ui:GetRobotAsset TimeoutMS="{x:Null}" sap2010:Annotation.AnnotationText="Get servername from cloud" AssetName="Accountant_DB_Server_Name" CacheStrategy="None" DisplayName="Get Asset" FolderPath="Root/Finance/.General" sap:VirtualizedContainerService.HintSize="434,174" sap2010:WorkflowViewState.IdRef="GetRobotAsset_8">
          <ui:GetRobotAsset.Value>
            <OutArgument x:TypeArguments="x:String">[str_serverName]</OutArgument>
          </ui:GetRobotAsset.Value>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:GetRobotAsset>
        <ui:GetRobotCredential TimeoutMS="{x:Null}" sap2010:Annotation.AnnotationText="Get database user's credentials from cloud" AssetName="Accountant_DB_Cred" CacheStrategy="None" DisplayName="Get Credential" FolderPath="Root/Finance/.General" sap:VirtualizedContainerService.HintSize="434,174" sap2010:WorkflowViewState.IdRef="GetRobotCredential_4" Password="[str_dbUserPass]" Username="[str_dbUserName]">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </ui:GetRobotCredential>
        <Assign sap:VirtualizedContainerService.HintSize="434,83" sap2010:WorkflowViewState.IdRef="Assign_4">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[str_connectionString]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String" xml:space="preserve">["Data Source="&amp; str_serverName &amp;
";Initial Catalog=" &amp; str_dbName &amp;
";User ID=" &amp; str_dbUserName &amp;
";Password="&amp; Marshal.PtrToStringBSTR(Marshal.SecureStringToBSTR(str_dbUserPass)) &amp;
";Trusted_Connection=True;TrustServerCertificate=True;"]</InArgument>
          </Assign.Value>
        </Assign>
      </Sequence>
      <FlowStep.Next>
        <x:Reference>__ReferenceID3</x:Reference>
      </FlowStep.Next>
    </FlowStep>
    <x:Reference>__ReferenceID4</x:Reference>
    <x:Reference>__ReferenceID5</x:Reference>
    <x:Reference>__ReferenceID6</x:Reference>
    <x:Reference>__ReferenceID7</x:Reference>
    <x:Reference>__ReferenceID8</x:Reference>
    <x:Reference>__ReferenceID9</x:Reference>
  </Flowchart>
</Activity>